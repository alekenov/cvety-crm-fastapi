#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –∫ –±–∞–∑–∞–º –¥–∞–Ω–Ω—ã—Ö (–ª–æ–∫–∞–ª—å–Ω—ã–µ –∏ –ø—Ä–æ–¥–∞–∫—à–Ω)
"""

import os
import sys
from dotenv import load_dotenv

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –¥–ª—è –∏–º–ø–æ—Ä—Ç–∞ cvety_connection
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

load_dotenv()

def test_supabase():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Supabase"""
    try:
        from supabase import create_client
        
        url = os.getenv("SUPABASE_URL")
        key = os.getenv("SUPABASE_SERVICE_KEY")
        
        if not url or not key:
            print("‚ùå Supabase credentials –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ .env")
            return False
            
        print("üü° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
        supabase = create_client(url, key)
        
        # –ü—Ä–æ—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å
        result = supabase.table('orders').select('id').limit(1).execute()
        print("‚úÖ Supabase –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print(f"   –¢–∞–±–ª–∏—Ü–∞ orders –¥–æ—Å—Ç—É–ø–Ω–∞")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ Supabase: {e}")
        return False

def test_mysql_local():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ª–æ–∫–∞–ª—å–Ω–æ–º—É MySQL Docker"""
    try:
        import pymysql
        
        print("üü° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ MySQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è...")
        connection = pymysql.connect(
            host=os.getenv("MYSQL_HOST", "localhost"),
            port=int(os.getenv("MYSQL_PORT", "3306")),
            user=os.getenv("MYSQL_USER", "root"),
            password=os.getenv("MYSQL_PASSWORD", "cvety123"),
            database=os.getenv("MYSQL_DATABASE", "cvety_db"),
            charset='utf8mb4'
        )
        
        cursor = connection.cursor()
        cursor.execute("SELECT COUNT(*) FROM b_sale_order WHERE ID > 122000")
        count = cursor.fetchone()[0]
        print("‚úÖ –õ–æ–∫–∞–ª—å–Ω—ã–π MySQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        print(f"   –ù–∞–π–¥–µ–Ω–æ {count} –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
        
        connection.close()
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ MySQL: {e}")
        return False

def test_production():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –≤—Å–µ –ø—Ä–æ–¥–∞–∫—à–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"""
    try:
        from cvety_connection import CvetyConnection
        
        print("üü° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ü–†–û–î–ê–ö–®–ù –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π...")
        print("   (SSH + MySQL + SFTP)")
        print()
        
        cvety = CvetyConnection()
        results = cvety.test_connections()
        
        print("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–¥–∞–∫—à–Ω–∞:")
        print(f"  SSH:   {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if results['ssh'] else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
        print(f"  MySQL: {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if results['mysql'] else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
        print(f"  SFTP:  {'‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç' if results['sftp'] else '‚ùå –ù–µ —Ä–∞–±–æ—Ç–∞–µ—Ç'}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ—Å—Ç: –ø–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        if results['mysql']:
            print("\nüìä –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö —Å –ø—Ä–æ–¥–∞–∫—à–Ω–∞:")
            try:
                # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –∑–∞–∫–∞–∑–∞
                recent_orders = cvety.execute_query("""
                    SELECT ID, ACCOUNT_NUMBER, STATUS_ID, PRICE, DATE_INSERT 
                    FROM b_sale_order 
                    ORDER BY ID DESC 
                    LIMIT 3
                """)
                
                if recent_orders:
                    print(f"   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–∫–∞–∑—ã ({len(recent_orders)} —à—Ç.):")
                    for order in recent_orders:
                        order_id, number, status, price, date = order
                        print(f"   ‚Ä¢ #{order_id} ({number}) - {price}‚Ç∏ - {status} - {date}")
                else:
                    print("   –ó–∞–∫–∞–∑—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                    
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: {e}")
                results['mysql'] = False
        
        return all(results.values())
        
    except ImportError:
        print("‚ùå cvety_connection –Ω–µ –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω.")
        return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–¥–∞–∫—à–Ω–∞: {e}")
        return False

def test_production_quick():
    """–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –ø—Ä–æ–¥–∞–∫—à–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å –ø—Ä–∏–º–µ—Ä–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è"""
    try:
        from cvety_connection import get_production_orders
        
        print("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç: –ø–æ–ª—É—á–µ–Ω–∏–µ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ —Å–µ–≥–æ–¥–Ω—è...")
        
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        from datetime import datetime, timedelta
        
        end_date = datetime.now().strftime('%Y-%m-%d')
        start_date = (datetime.now() - timedelta(days=7)).strftime('%Y-%m-%d')
        
        orders = get_production_orders(start_date, end_date)
        
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(orders)} –∑–∞–∫–∞–∑–æ–≤ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π")
        if orders:
            print("   –ü—Ä–∏–º–µ—Ä—ã –∑–∞–∫–∞–∑–æ–≤:")
            for order in orders[:3]:
                order_id, number, status, price, user_id, date = order
                print(f"   ‚Ä¢ #{order_id} ({number}) - {price}‚Ç∏ - {status}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞: {e}")
        return False

if __name__ == "__main__":
    print("üîå –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–ô")
    print("=" * 50)
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    print("1Ô∏è‚É£ –õ–û–ö–ê–õ–¨–ù–´–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:")
    mysql_ok = test_mysql_local()
    print()
    supabase_ok = test_supabase()
    print()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø—Ä–æ–¥–∞–∫—à–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    print("2Ô∏è‚É£ –ü–†–û–î–ê–ö–®–ù –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø:")
    production_ok = test_production()
    print()
    
    # –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —É–¥–æ–±–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
    print("3Ô∏è‚É£ –¢–ï–°–¢ –£–î–û–ë–ù–´–• –§–£–ù–ö–¶–ò–ô:")
    quick_ok = test_production_quick()
    print()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    print("=" * 50)
    if mysql_ok and supabase_ok and production_ok and quick_ok:
        print("üéØ –í–°–ï –ü–û–î–ö–õ–Æ–ß–ï–ù–ò–Ø –†–ê–ë–û–¢–ê–Æ–¢ –û–¢–õ–ò–ß–ù–û!")
        print("\nüí° –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:")
        print("   from cvety_connection import CvetyConnection")
        print("   cvety = CvetyConnection()")
        print("   orders = cvety.execute_query('SELECT * FROM b_sale_order LIMIT 10')")
    else:
        print("‚ö†Ô∏è  –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è–º–∏:")
        if not mysql_ok:
            print("   ‚Ä¢ –õ–æ–∫–∞–ª—å–Ω—ã–π MySQL –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        if not supabase_ok:
            print("   ‚Ä¢ Supabase –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç") 
        if not production_ok:
            print("   ‚Ä¢ –ü—Ä–æ–¥–∞–∫—à–Ω –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")
        if not quick_ok:
            print("   ‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç")