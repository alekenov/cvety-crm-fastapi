#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
"""

from supabase import create_client, Client
from config import config as app_config

def get_supabase() -> Client:
    """Get Supabase client"""
    url = app_config.SUPABASE_URL
    key = app_config.SUPABASE_ANON_KEY
    return create_client(url, key)

def update_specific_orders():
    """
    –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç–∞—Ç—É—Å—ã –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞:
    - 122183: –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å AP (–ü—Ä–∏–Ω—è—Ç)
    - 122192: –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å DE (–í –ø—É—Ç–∏)  
    - 122228-122233: —ç—Ç–æ –Ω–æ–≤—ã–µ –∑–∞–∫–∞–∑—ã, –º–æ–∂–Ω–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å
    """
    db = get_supabase()
    
    # –°—Ç–∞—Ç—É—Å—ã –∏–∑ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    order_updates = {
        122183: "AP",  # –ü—Ä–∏–Ω—è—Ç (—Ä–æ–∑–æ–≤–∞—è –∫–Ω–æ–ø–∫–∞)
        122192: "DE",  # –í –ø—É—Ç–∏ (–∑–µ–ª–µ–Ω–∞—è –∫–Ω–æ–ø–∫–∞)
    }
    
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤...")
    
    for bitrix_order_id, new_status in order_updates.items():
        try:
            # –ò—â–µ–º –∑–∞–∫–∞–∑ –≤ Supabase
            orders = db.table('orders')\
                .select('id, order_number, status')\
                .eq('bitrix_order_id', bitrix_order_id)\
                .execute()
            
            if orders.data:
                order = orders.data[0]
                current_status = order['status']
                order_number = order['order_number']
                
                if current_status != new_status:
                    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å
                    update_result = db.table('orders')\
                        .update({'status': new_status})\
                        .eq('id', order['id'])\
                        .execute()
                    
                    if update_result.data:
                        print(f"‚úÖ –ó–∞–∫–∞–∑ {bitrix_order_id} ({order_number}): {current_status} ‚Üí {new_status}")
                    else:
                        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–∫–∞–∑ {bitrix_order_id}")
                else:
                    print(f"‚ÑπÔ∏è  –ó–∞–∫–∞–∑ {bitrix_order_id}: —Å—Ç–∞—Ç—É—Å —É–∂–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π ({new_status})")
            else:
                print(f"‚ö†Ô∏è  –ó–∞–∫–∞–∑ {bitrix_order_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Supabase")
                
                # –í–æ–∑–º–æ–∂–Ω–æ, –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑
                print(f"   –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –∑–∞–∫–∞–∑ —Å order_number = {bitrix_order_id}")
                orders_by_number = db.table('orders')\
                    .select('id, order_number, status, bitrix_order_id')\
                    .eq('order_number', str(bitrix_order_id))\
                    .execute()
                
                if orders_by_number.data:
                    order = orders_by_number.data[0]
                    print(f"   –ù–∞–π–¥–µ–Ω –∑–∞–∫–∞–∑ –ø–æ –Ω–æ–º–µ—Ä—É: {order}")
                    
                    # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∫ bitrix_order_id, —Ç–∞–∫ –∏ —Å—Ç–∞—Ç—É—Å
                    update_result = db.table('orders')\
                        .update({
                            'bitrix_order_id': bitrix_order_id,
                            'status': new_status
                        })\
                        .eq('id', order['id'])\
                        .execute()
                    
                    if update_result.data:
                        print(f"‚úÖ –ó–∞–∫–∞–∑ {bitrix_order_id}: –æ–±–Ω–æ–≤–ª–µ–Ω –±–∏—Ç—Ä–∏–∫—Å ID –∏ —Å—Ç–∞—Ç—É—Å ‚Üí {new_status}")
                    else:
                        print(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å –∑–∞–∫–∞–∑ {bitrix_order_id}")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ {bitrix_order_id}: {e}")

def show_active_orders():
    """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã"""
    db = get_supabase()
    
    print("\nüìä –¢–µ–∫—É—â–∏–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–∫–∞–∑—ã:")
    
    # –ê–∫—Ç–∏–≤–Ω—ã–µ —Å—Ç–∞—Ç—É—Å—ã
    active_statuses = ["new", "paid", "processing", "AP", "DE", "PD", "CO", "TR", "CF", "RO", "RD", "P", "KC", "GP", "N"]
    
    active_orders = db.table('orders')\
        .select('bitrix_order_id, order_number, status, recipient_name, total_amount, created_at')\
        .in_('status', active_statuses)\
        .order('created_at', desc=True)\
        .limit(20)\
        .execute()
    
    if active_orders.data:
        for order in active_orders.data:
            bitrix_id = order.get('bitrix_order_id', 'N/A')
            status = order.get('status', 'N/A')
            order_num = order.get('order_number', 'N/A')
            recipient = order.get('recipient_name', 'N/A')
            amount = order.get('total_amount', 0)
            created = order.get('created_at', '')[:16] if order.get('created_at') else 'N/A'
            
            print(f"  ‚Ä¢ {bitrix_id} ({order_num}) - {status} - {recipient} - {amount}‚Ç∏ - {created}")
    else:
        print("  –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")

if __name__ == "__main__":
    print("üéØ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –∑–∞–∫–∞–∑–æ–≤")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    show_active_orders()
    
    print("\n" + "=" * 50)
    
    # –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∑–∞–∫–∞–∑—ã
    update_specific_orders()
    
    print("\n" + "=" * 50)
    
    # –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    show_active_orders()