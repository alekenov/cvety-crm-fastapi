#!/usr/bin/env python3
"""
Debug —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–µ—Ä–µ–¥–∞—á–∏ –≤—Å–µ—Ö —Å–≤–æ–π—Å—Ç–≤ –≤ Bitrix
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç debug endpoint —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
"""

import requests
import json
import time
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
WEBHOOK_URL = "http://localhost:8001/webhooks/bitrix/order"
WEBHOOK_TOKEN = "fad5fbe4c8a520cf6d5453685b758c7fd9f6681f084be335fcdcd190ad9aaa0e"

def test_debug_properties():
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–∫–∞–∑ —Å –ø–æ–ª–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏ –∏ –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º"""
    timestamp = int(time.time())
    test_order_id = timestamp + 500000  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
    test_user_id = timestamp + 100000
    
    # –†–µ–∞–ª—å–Ω—ã–π —Ç–æ–≤–∞—Ä
    real_product = {"id": 696613, "name": "–ë—É–∫–µ—Ç –°—Ç–∞–Ω–¥–∞—Ä—Ç", "price": 7500.00}
    
    payload = {
        "event": "order.create",
        "token": WEBHOOK_TOKEN,
        "data": {
            "ID": str(test_order_id),
            "ACCOUNT_NUMBER": str(test_order_id),
            "STATUS_ID": "N",
            "PRICE": str(real_product["price"]),
            "PRICE_DELIVERY": "1500.0000",
            "USER_ID": str(test_user_id),
            "PAYED": "N",
            "DATE_INSERT": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "PAY_SYSTEM_ID": "10",
            "USER_DESCRIPTION": "DEBUG –¢–ï–°–¢: –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–≤–æ–π—Å—Ç–≤",
            "properties": {
                # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ –ø–æ–ª—É—á–∞—Ç–µ–ª—è
                "phone": "+77777777999",
                "email": "debug_test@example.com",
                "nameRecipient": "DEBUG –ü–æ–ª—É—á–∞—Ç–µ–ª—å –¢–µ—Å—Ç–æ–≤—ã–π",
                "phoneRecipient": "+77777777998",
                "addressRecipient": "DEBUG –∞–¥—Ä–µ—Å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–≤–æ–π—Å—Ç–≤, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 999",
                
                # –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–´–ï —Å–≤–æ–π—Å—Ç–≤–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ CRM
                "city": "2",  # –ê–ª–º–∞—Ç—ã (–¥–æ–ª–∂–µ–Ω –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ CRM)
                "when": "18",  # 15:00-16:00 (–¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤—Ä–µ–º—è –¥–æ—Å—Ç–∞–≤–∫–∏)
                "data": "2025-08-25",  # –î–∞—Ç–∞ –¥–æ—Å—Ç–∞–≤–∫–∏
                "shopId": "17008",  # CVETYKZ (–¥–æ–ª–∂–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∞–≥–∞–∑–∏–Ω–∞)
                
                # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞
                "postcardText": "üîç DEBUG —Ç–µ—Å—Ç: –≠—Ç–∞ –æ—Ç–∫—Ä—ã—Ç–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –≤–∏–¥–Ω–∞ –≤ –ø–æ–ª–µ '–û—Ç–∫—Ä—ã—Ç–∫–∞'",
                "SOURCE_ORDER": "debug_properties_test"
            },
            "basket": [
                {
                    "ID": f"{test_order_id}1",
                    "PRODUCT_ID": str(real_product["id"]),
                    "NAME": real_product["name"],
                    "PRICE": str(real_product["price"]),
                    "QUANTITY": "1.0000",
                    "CURRENCY": "KZT"
                }
            ],
            "user": {
                "ID": str(test_user_id),
                "phone": "+77777777999",
                "email": "debug_test@example.com"
            },
            "webhook_source": "debug_properties_test",  # –ó–∞–ø—É—Å–∫–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
            "webhook_timestamp": datetime.now().isoformat()
        }
    }
    
    print("üîç DEBUG –¢–ï–°–¢ - –î–ï–¢–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê –°–í–û–ô–°–¢–í")
    print("=" * 70)
    print(f"üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ {test_order_id} —Å DEBUG –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º...")
    print(f"üéØ –¢–æ–≤–∞—Ä: {real_product['name']} (ID: {real_product['id']})")
    print(f"üí∞ –¶–µ–Ω–∞: {real_product['price']:,.0f} KZT + –¥–æ—Å—Ç–∞–≤–∫–∞ 1,500 KZT")
    print("")
    print("üîß DEBUG —Å–≤–æ–π—Å—Ç–≤–∞ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã–µ –≤ Bitrix:")
    for key, value in payload["data"]["properties"].items():
        print(f"   ‚Ä¢ {key}: '{value}'")
    print("")
    
    try:
        response = requests.post(
            WEBHOOK_URL,
            json=payload,
            headers={'Content-Type': 'application/json'},
            timeout=60
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω:")
            print(f"   ‚Ä¢ Status: {result.get('status')}")
            print(f"   ‚Ä¢ Action: {result.get('action')}")
            print(f"   ‚Ä¢ Supabase Order ID: {result.get('order_id')}")
            print("")
            
            # –û–∂–∏–¥–∞–µ–º –æ–±—Ä–∞—Ç–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
            print("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (25 —Å–µ–∫—É–Ω–¥)...")
            time.sleep(25)
            
            print("üìä –ü–†–û–í–ï–†–ö–ê DEBUG –õ–û–ì–û–í:")
            print("   ssh root@185.125.90.141 'tail -50 /tmp/api_order_create.log'")
            print("")
            print("üîç –ò—â–∏—Ç–µ –≤ –ª–æ–≥–∞—Ö:")
            print("   ‚úÖ 'Set postcardText: üîç DEBUG —Ç–µ—Å—Ç...'")
            print("   ‚úÖ 'Set when: 18'")
            print("   ‚úÖ 'Set city: 2'")
            print("   ‚úÖ 'Set shopId: 17008'")
            print("")
            
            return result.get('order_id')
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ webhook: {response.status_code}")
            print(f"Response: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return None

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ DEBUG —Ç–µ—Å—Ç–∞ —Å–≤–æ–π—Å—Ç–≤...")
    print("    –≠—Ç–æ—Ç —Ç–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π debug endpoint —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å FastAPI
    try:
        response = requests.get("http://localhost:8001/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")
        else:
            print("‚ö†Ô∏è FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –Ω–µ HTTP 200")
    except:
        print("‚ùå FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ù–ï –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ localhost:8001")
        return
    
    print("")
    supabase_order_id = test_debug_properties()
    
    if supabase_order_id:
        print("üéâ DEBUG —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("")
        print("üìã –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:")
        print("   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏: ssh root@185.125.90.141 'tail -50 /tmp/api_order_create.log'")
        print("   2. –ù–∞–π–¥–∏—Ç–µ –∑–∞–∫–∞–∑ –≤ Bitrix CRM —Å SOURCE_ORDER = 'api_supabase_debug'")
        print("   3. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –ø–æ–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∫–∞–∫ –≤ –æ–±—Ä–∞–∑—Ü–µ 122183")
        print("")
        print(f"üÜî Supabase Order ID: {supabase_order_id}")
    else:
        print("‚ùå DEBUG —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")

if __name__ == "__main__":
    main()