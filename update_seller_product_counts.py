#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–æ–≤ —É –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞ –≤ description
–í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ –ø–æ–∫–∞ –Ω–µ —Å–æ–∑–¥–∞–Ω–∞ RPC —Ñ—É–Ω–∫—Ü–∏—è
"""

from supabase import create_client
import os
from dotenv import load_dotenv

load_dotenv()

SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_SERVICE_KEY") or os.getenv("SUPABASE_ANON_KEY")

def update_product_counts():
    """–û–±–Ω–æ–≤–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤ –≤ –æ–ø–∏—Å–∞–Ω–∏–∏ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞"""
    
    supabase = create_client(SUPABASE_URL, SUPABASE_KEY)
    
    print("–ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤...")
    sellers_result = supabase.table('sellers').select('id, name, description').execute()
    
    if not sellers_result.data:
        print("–ü—Ä–æ–¥–∞–≤—Ü—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return
    
    sellers = sellers_result.data
    print(f"–ù–∞–π–¥–µ–Ω–æ {len(sellers)} –ø—Ä–æ–¥–∞–≤—Ü–æ–≤")
    
    updated_count = 0
    
    # –î–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–¥–∞–≤—Ü–∞ –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–æ–≤
    for i, seller in enumerate(sellers):
        if i % 50 == 0:
            print(f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {i}/{len(sellers)}")
        
        # –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ–≤–∞—Ä—ã
        count_result = supabase.table('products')\
            .select('id', count='exact')\
            .eq('seller_id', seller['id'])\
            .execute()
        
        product_count = count_result.count if hasattr(count_result, 'count') else 0
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —Ç–æ–≤–∞—Ä–æ–≤
        new_description = f"–¢–æ–≤–∞—Ä–æ–≤: {product_count}"
        if seller.get('description'):
            # –ï—Å–ª–∏ –µ—Å—Ç—å –æ–ø–∏—Å–∞–Ω–∏–µ, –¥–æ–±–∞–≤–ª—è–µ–º –∫ –Ω–µ–º—É
            if '–¢–æ–≤–∞—Ä–æ–≤:' not in seller['description']:
                new_description = f"{seller['description']} | –¢–æ–≤–∞—Ä–æ–≤: {product_count}"
            else:
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                import re
                new_description = re.sub(r'–¢–æ–≤–∞—Ä–æ–≤: \d+', f'–¢–æ–≤–∞—Ä–æ–≤: {product_count}', seller['description'])
        
        try:
            # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–¥–∞–≤—Ü–∞
            supabase.table('sellers')\
                .update({'description': new_description})\
                .eq('id', seller['id'])\
                .execute()
            
            updated_count += 1
            
            if product_count > 0 and updated_count <= 10:
                print(f"  ‚úÖ {seller['name']}: {product_count} —Ç–æ–≤–∞—Ä–æ–≤")
                
        except Exception as e:
            print(f"  ‚ùå –û—à–∏–±–∫–∞ –¥–ª—è {seller['name']}: {e}")
    
    print(f"\n‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ {updated_count} –ø—Ä–æ–¥–∞–≤—Ü–æ–≤")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
    print("\nüìä –¢–æ–ø-10 –ø—Ä–æ–¥–∞–≤—Ü–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ç–æ–≤–∞—Ä–æ–≤:")
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥–∞–≤—Ü–æ–≤
    sellers_result = supabase.table('sellers').select('name, description').execute()
    
    if sellers_result.data:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è
        sellers_with_counts = []
        for seller in sellers_result.data:
            if seller.get('description') and '–¢–æ–≤–∞—Ä–æ–≤:' in seller['description']:
                import re
                match = re.search(r'–¢–æ–≤–∞—Ä–æ–≤: (\d+)', seller['description'])
                if match:
                    count = int(match.group(1))
                    if count > 0:
                        sellers_with_counts.append({
                            'name': seller['name'],
                            'count': count
                        })
        
        # –°–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-10
        sellers_with_counts.sort(key=lambda x: x['count'], reverse=True)
        for i, seller in enumerate(sellers_with_counts[:10], 1):
            print(f"  {i}. {seller['name']}: {seller['count']} —Ç–æ–≤–∞—Ä–æ–≤")

if __name__ == "__main__":
    print("="*60)
    print("  –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–û–õ–ò–ß–ï–°–¢–í–ê –¢–û–í–ê–†–û–í")
    print("="*60)
    
    update_product_counts()
    
    print("\n" + "="*60)