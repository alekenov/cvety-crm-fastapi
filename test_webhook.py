#!/usr/bin/env python3
"""
–¢–µ—Å—Ç webhook endpoint
"""

import json
import requests
import time

def test_webhook_endpoint():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç webhook endpoint"""
    
    print("üåê –§–ê–ó–ê 6: –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ webhook endpoint...")
    print()
    
    # URL –∏ –∑–∞–≥–æ–ª–æ–≤–∫–∏
    url = "http://localhost:8001/webhooks/bitrix/order"
    # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã —Ç–æ–∫–µ–Ω–æ–≤
    token_variants = [
        "fad5fbe4c8a520cf6d5453685b758c7fd9f6681f084be335fcdcd190ad9aaa0e",  # –ò–∑ .env
        "secret-webhook-token-2024"  # Default –∏–∑ config
    ]
    
    for i, token in enumerate(token_variants):
        print(f"   üîë –ü—Ä–æ–±—É–µ–º —Ç–æ–∫–µ–Ω #{i+1}...")
        headers = {
            "Content-Type": "application/json", 
            "Authorization": f"Bearer {token}"
        }
    
    # –¢–µ—Å—Ç–æ–≤—ã–π payload
    test_payload = {
        "event": "order.create",
        "data": {
            "ID": 999999,
            "STATUS_ID": "N",
            "DATE_INSERT": "22.08.2025 15:00:00",
            "PRICE": "10000.00",
            "USER_ID": 1079,
            "PHONE": "+77015211545",
            "EMAIL": "test@webhook.com",
            "COMMENT": "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –æ—Ç webhook"
        }
    }
    
    print("üü° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π webhook...")
    print(f"   URL: {url}")
    print(f"   Payload: {json.dumps(test_payload, indent=2, ensure_ascii=False)[:200]}...")
    
    try:
        response = requests.post(
            url, 
            json=test_payload, 
            headers=headers,
            timeout=10
        )
        
        print(f"   üì° HTTP Status: {response.status_code}")
        
        if response.status_code == 200:
            print("   ‚úÖ Webhook endpoint –æ—Ç–≤–µ—á–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ")
            try:
                response_data = response.json()
                print(f"   üì§ –û—Ç–≤–µ—Ç: {json.dumps(response_data, indent=2, ensure_ascii=False)[:200]}...")
            except:
                print(f"   üì§ –û—Ç–≤–µ—Ç (text): {response.text[:200]}...")
            return True
            
        elif response.status_code == 404:
            print("   ‚ùå Endpoint –Ω–µ –Ω–∞–π–¥–µ–Ω (404)")
            print("   üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —á—Ç–æ app.py —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ routes")
            return False
            
        elif response.status_code == 401:
            print("   ‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (401)")
            print("   üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ webhook token")
            return False
            
        else:
            print(f"   ‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: {response.status_code}")
            print(f"   üì§ –û—Ç–≤–µ—Ç: {response.text[:200]}...")
            return False
            
    except requests.exceptions.ConnectionError:
        print("   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É")
        print("   üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ FastAPI —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8001")
        return False
        
    except requests.exceptions.Timeout:
        print("   ‚ùå –¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ (>10s)")
        return False
        
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return False

def test_server_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —á—Ç–æ —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω"""
    
    print("üü° –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–∞...")
    
    # –ü–æ–ø—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ endpoints
    endpoints_to_try = [
        "/",
        "/docs", 
        "/openapi.json",
        "/health",
        "/status"
    ]
    
    for endpoint in endpoints_to_try:
        try:
            response = requests.get(f"http://localhost:8001{endpoint}", timeout=3)
            print(f"   {endpoint}: HTTP {response.status_code}")
            if response.status_code != 404:
                return True
        except requests.exceptions.ConnectionError:
            continue
        except:
            continue
    
    print("   ‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∏ –Ω–∞ –æ–¥–∏–Ω endpoint")
    return False

if __name__ == "__main__":
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï WEBHOOK ENDPOINT")
    print("=" * 50)
    
    server_running = test_server_status()
    print()
    
    if server_running:
        webhook_works = test_webhook_endpoint()
        print()
        
        if webhook_works:
            print("üéØ WEBHOOK ENDPOINT –†–ê–ë–û–¢–ê–ï–¢!")
        else:
            print("‚ö†Ô∏è  WEBHOOK ENDPOINT –ù–ï –†–ê–ë–û–¢–ê–ï–¢")
    else:
        print("‚ùå –°–ï–†–í–ï–† –ù–ï –ó–ê–ü–£–©–ï–ù")
        print("   –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python3 -m uvicorn app:app --host 0.0.0.0 --port 8001 --reload")
        
    print("=" * 50)