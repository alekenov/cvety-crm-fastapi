#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
"""

import requests
import json
import time
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
WEBHOOK_URL = "http://localhost:8001/webhooks/bitrix/order"
WEBHOOK_TOKEN = "fad5fbe4c8a520cf6d5453685b758c7fd9f6681f084be335fcdcd190ad9aaa0e"

def test_telegram_notification():
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–∫–∞–∑ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    timestamp = int(time.time())
    test_order_id = timestamp + 950000
    test_user_id = timestamp + 100000
    
    payload = {
        "event": "order.create",
        "token": WEBHOOK_TOKEN,
        "data": {
            "ID": str(test_order_id),
            "ACCOUNT_NUMBER": str(test_order_id),
            "STATUS_ID": "N",
            "PRICE": "15000.0000",
            "PRICE_DELIVERY": "2500.0000",
            "USER_ID": str(test_user_id),
            "PAYED": "N",
            "DATE_INSERT": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "PAY_SYSTEM_ID": "10",
            "USER_DESCRIPTION": "–¢–µ—Å—Ç Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - –ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ",
            "properties": {
                "phone": "+77777777555",
                "email": "telegram_full_test@example.com",
                "nameRecipient": "–ü–æ–ª—É—á–∞—Ç–µ–ª—å –ü–æ–ª–Ω—ã—Ö Telegram –î–∞–Ω–Ω—ã—Ö",
                "phoneRecipient": "+77777777556", 
                "addressRecipient": "–ü–æ–ª–Ω—ã–π –∞–¥—Ä–µ—Å –¥–ª—è Telegram, —É–ª. –¢–µ—Å—Ç–æ–≤–∞—è, –¥. 15, –∫–≤. 25",
                "data": "2025-08-25",
                "postcardText": "üì± –ü–æ–ª–Ω—ã–π —Ç–µ—Å—Ç Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: –¥–∞–Ω–Ω—ã–µ –∑–∞–∫–∞–∑–∞, –ø–æ–ª—É—á–∞—Ç–µ–ª—è –∏ —Ç–æ–≤–∞—Ä–æ–≤",
                "city": "2",
                "when": "18",
                "SOURCE_ORDER": "telegram_full_test",
                "shopId": "17008"
            },
            "basket": [
                {
                    "ID": str(test_order_id) + "1",
                    "PRODUCT_ID": "595099",
                    "NAME": "–ü—Ä–µ–º–∏—É–º –±—É–∫–µ—Ç –¥–ª—è Telegram —Ç–µ—Å—Ç–∞",
                    "PRICE": "15000.0000",
                    "QUANTITY": "1.0000", 
                    "CURRENCY": "KZT",
                    "DISCOUNT_PRICE": "0.0000"
                }
            ],
            "user": {
                "ID": str(test_user_id),
                "phone": "+77777777555",
                "email": "telegram_full_test@example.com"
            },
            "webhook_source": "telegram_full_test",
            "webhook_timestamp": datetime.now().isoformat()
        }
    }
    
    print("üì± –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
    print("=" * 50)
    print(f"üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ {test_order_id} –¥–ª—è Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    print(f"üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {payload['data']['properties']['nameRecipient']}")
    print(f"üìç –ê–¥—Ä–µ—Å: {payload['data']['properties']['addressRecipient']}")
    print(f"üí∞ –°—É–º–º–∞: {payload['data']['PRICE']} KZT + –¥–æ—Å—Ç–∞–≤–∫–∞ {payload['data']['PRICE_DELIVERY']} KZT")
    print(f"üìù –û—Ç–∫—Ä—ã—Ç–∫–∞: {payload['data']['properties']['postcardText']}")
    print("")
    
    try:
        response = requests.post(
            WEBHOOK_URL, 
            json=payload,
            headers={'Content-Type': 'application/json'},
            timeout=30
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω:")
            print(f"   ‚Ä¢ Status: {result.get('status')}")
            print(f"   ‚Ä¢ Action: {result.get('action')}")
            print(f"   ‚Ä¢ Order ID: {result.get('order_id')}")
            print("")
            print("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –±–æ—Ç –Ω–∞ –Ω–∞–ª–∏—á–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –ø–æ–ª–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏:")
            print("   ‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ")
            print("   ‚Ä¢ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–∞—Ç–µ–ª—è")
            print("   ‚Ä¢ –î–µ—Ç–∞–ª–∏ —Ç–æ–≤–∞—Ä–∞")
            print("   ‚Ä¢ –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏")
            print("   ‚Ä¢ –¢–µ–∫—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∫–∏")
            print("")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ webhook: {response.status_code}")
            print(f"Response: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞ Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π...")
    print("    –°–æ–∑–¥–∞–µ—Ç –∑–∞–∫–∞–∑ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ–ª–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ Telegram\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å FastAPI
    try:
        response = requests.get("http://localhost:8001/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")
        else:
            print("‚ö†Ô∏è FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –Ω–µ HTTP 200")
    except:
        print("‚ùå FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ù–ï –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ localhost:8001")
        return
    
    success = test_telegram_notification()
    
    if success:
        print("üéâ –¢–µ—Å—Ç Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω!")
        print("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram –±–æ—Ç –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
    else:
        print("‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")

if __name__ == "__main__":
    main()