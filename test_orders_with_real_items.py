#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ —Å –†–ï–ê–õ–¨–ù–´–ú–ò —Ç–æ–≤–∞—Ä–∞–º–∏
–ò—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –≤ –±–∞–∑–µ ID —Ç–æ–≤–∞—Ä–æ–≤
"""

import requests
import json
import time
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
WEBHOOK_URL = "http://localhost:8001/webhooks/bitrix/order"
WEBHOOK_TOKEN = "fad5fbe4c8a520cf6d5453685b758c7fd9f6681f084be335fcdcd190ad9aaa0e"

# –†–µ–∞–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
REAL_PRODUCTS = [
    {"id": 696624, "name": "–ë—É–∫–µ—Ç –ü—Ä–µ–º–∏—É–º", "price": 15000.00},
    {"id": 696613, "name": "–ë—É–∫–µ—Ç –°—Ç–∞–Ω–¥–∞—Ä—Ç", "price": 7500.00},
    {"id": 696585, "name": "–ë—É–∫–µ—Ç –≠–∫–æ–Ω–æ–º", "price": 7500.00},
    {"id": 695515, "name": "–ë—É–∫–µ—Ç –ú–∏–Ω–∏", "price": 4800.00}
]

def create_test_order_with_real_items():
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–∫–∞–∑ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ –∏–∑ –±–∞–∑—ã"""
    timestamp = int(time.time())
    test_order_id = timestamp + 970000  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
    test_user_id = timestamp + 120000
    
    # –í—ã–±–∏—Ä–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–π —Ç–æ–≤–∞—Ä –¥–ª—è —Ç–µ—Å—Ç–∞
    selected_product = REAL_PRODUCTS[1]  # –ë—É–∫–µ—Ç –°—Ç–∞–Ω–¥–∞—Ä—Ç 7500‚Ç∏
    
    payload = {
        "event": "order.create",
        "token": WEBHOOK_TOKEN,
        "data": {
            "ID": str(test_order_id),
            "ACCOUNT_NUMBER": str(test_order_id),
            "STATUS_ID": "N",
            "PRICE": str(selected_product["price"]),
            "PRICE_DELIVERY": "1500.0000",
            "USER_ID": str(test_user_id),
            "PAYED": "N",
            "DATE_INSERT": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "PAY_SYSTEM_ID": "10",
            "USER_DESCRIPTION": f"–¢–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º {selected_product['name']}",
            "properties": {
                "phone": "+77777777111",
                "email": "real_items_test@example.com",
                "nameRecipient": "–ü–æ–ª—É—á–∞—Ç–µ–ª—å –†–µ–∞–ª—å–Ω—ã—Ö –¢–æ–≤–∞—Ä–æ–≤",
                "phoneRecipient": "+77777777112",
                "addressRecipient": "–†–µ–∞–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å –¥–ª—è —Ä–µ–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, —É–ª. –¢–æ–≤–∞—Ä–Ω–∞—è, –¥. 20",
                "data": "2025-08-25",
                "postcardText": "üõçÔ∏è –¢–µ—Å—Ç —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
                "city": "2",
                "when": "30",
                "SOURCE_ORDER": "real_items_test",
                "shopId": "17008"
            },
            "basket": [
                {
                    "ID": f"{test_order_id}1",
                    "PRODUCT_ID": str(selected_product["id"]),  # –†–ï–ê–õ–¨–ù–´–ô ID —Ç–æ–≤–∞—Ä–∞
                    "NAME": selected_product["name"],
                    "PRICE": str(selected_product["price"]),
                    "QUANTITY": "1.0000",
                    "CURRENCY": "KZT",
                    "DISCOUNT_PRICE": "0.0000"
                }
            ],
            "user": {
                "ID": str(test_user_id),
                "phone": "+77777777111",
                "email": "real_items_test@example.com"
            },
            "webhook_source": "real_items_test",  # –ù–ï production_real - –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é
            "webhook_timestamp": datetime.now().isoformat()
        }
    }
    
    print("üõçÔ∏è –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–ö–ê–ó–û–í –° –†–ï–ê–õ–¨–ù–´–ú–ò –¢–û–í–ê–†–ê–ú–ò")
    print("=" * 60)
    print(f"üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ {test_order_id} —Å —Ä–µ–∞–ª—å–Ω—ã–º —Ç–æ–≤–∞—Ä–æ–º...")
    print(f"üéØ –¢–æ–≤–∞—Ä: {selected_product['name']} (ID: {selected_product['id']})")
    print(f"üí∞ –¶–µ–Ω–∞: {selected_product['price']:,.0f} KZT")
    print(f"üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {payload['data']['properties']['nameRecipient']}")
    print(f"üìç –ê–¥—Ä–µ—Å: {payload['data']['properties']['addressRecipient']}")
    print(f"üîÑ Webhook source: {payload['data']['webhook_source']} (–∑–∞–ø—É—Å—Ç–∏—Ç –æ–±—Ä–∞—Ç–Ω—É—é —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é)")
    print("")
    
    try:
        response = requests.post(
            WEBHOOK_URL,
            json=payload,
            headers={'Content-Type': 'application/json'},
            timeout=45  # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º timeout –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω:")
            print(f"   ‚Ä¢ Status: {result.get('status')}")
            print(f"   ‚Ä¢ Action: {result.get('action')}")
            print(f"   ‚Ä¢ Supabase Order ID: {result.get('order_id')}")
            print("")
            
            # –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
            print("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (15 —Å–µ–∫—É–Ω–¥)...")
            time.sleep(15)
            
            print("üîç –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å:")
            print("   ‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω –≤ Supabase")
            print("   ‚úÖ –ó–∞–∫–∞–∑ —Å–æ–∑–¥–∞–Ω –≤ Bitrix —Å —Ç–æ–≤–∞—Ä–æ–º")
            print("   ‚úÖ –¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É Bitrix")
            print("   ‚úÖ bitrix_order_id –æ–±–Ω–æ–≤–ª–µ–Ω –≤ Supabase")
            print("")
            print("üìã –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏:")
            print("   ‚Ä¢ Bitrix CRM -> –∑–∞–∫–∞–∑ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–≤–∞—Ä")
            print("   ‚Ä¢ Supabase console -> bitrix_order_id –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø–æ–ª–Ω–µ–Ω")
            print("   ‚Ä¢ –õ–æ–≥–∏: ssh root@185.125.90.141 'tail -20 /tmp/api_order_create.log'")
            print("")
            
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ webhook: {response.status_code}")
            print(f"Response: {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def test_multiple_items_order():
    """–°–æ–∑–¥–∞–µ—Ç –∑–∞–∫–∞–∑ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏"""
    timestamp = int(time.time())
    test_order_id = timestamp + 980000  # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID
    test_user_id = timestamp + 130000
    
    # –í—ã–±–∏—Ä–∞–µ–º 2 —Ç–æ–≤–∞—Ä–∞
    selected_products = REAL_PRODUCTS[2:4]  # –≠–∫–æ–Ω–æ–º + –ú–∏–Ω–∏
    total_price = sum(p["price"] for p in selected_products)
    
    basket = []
    for i, product in enumerate(selected_products):
        basket.append({
            "ID": f"{test_order_id}{i+1}",
            "PRODUCT_ID": str(product["id"]),
            "NAME": product["name"],
            "PRICE": str(product["price"]),
            "QUANTITY": "1.0000",
            "CURRENCY": "KZT",
            "DISCOUNT_PRICE": "0.0000"
        })
    
    payload = {
        "event": "order.create",
        "token": WEBHOOK_TOKEN,
        "data": {
            "ID": str(test_order_id),
            "ACCOUNT_NUMBER": str(test_order_id),
            "STATUS_ID": "N",
            "PRICE": str(total_price),
            "PRICE_DELIVERY": "2000.0000",
            "USER_ID": str(test_user_id),
            "PAYED": "N",
            "DATE_INSERT": datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
            "PAY_SYSTEM_ID": "10",
            "USER_DESCRIPTION": f"–¢–µ—Å—Ç —Å {len(selected_products)} —Ç–æ–≤–∞—Ä–∞–º–∏",
            "properties": {
                "phone": "+77777777222",
                "email": "multi_items_test@example.com",
                "nameRecipient": "–ü–æ–ª—É—á–∞—Ç–µ–ª—å –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –¢–æ–≤–∞—Ä–æ–≤",
                "phoneRecipient": "+77777777223",
                "addressRecipient": "–ê–¥—Ä–µ—Å –¥–ª—è –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤, —É–ª. –ú—É–ª—å—Ç–∏, –¥. 30",
                "data": "2025-08-25",
                "postcardText": f"üõçÔ∏è –¢–µ—Å—Ç —Å {len(selected_products)} —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏",
                "city": "2",
                "when": "31",
                "SOURCE_ORDER": "multi_items_test",
                "shopId": "17008"
            },
            "basket": basket,
            "user": {
                "ID": str(test_user_id),
                "phone": "+77777777222",
                "email": "multi_items_test@example.com"
            },
            "webhook_source": "multi_items_test",
            "webhook_timestamp": datetime.now().isoformat()
        }
    }
    
    print("üõí –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–ö–ê–ó–ê –° –ù–ï–°–ö–û–õ–¨–ö–ò–ú–ò –¢–û–í–ê–†–ê–ú–ò")
    print("=" * 60)
    print(f"üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ {test_order_id} —Å {len(selected_products)} —Ç–æ–≤–∞—Ä–∞–º–∏...")
    
    for i, product in enumerate(selected_products, 1):
        print(f"üéØ –¢–æ–≤–∞—Ä {i}: {product['name']} (ID: {product['id']}) - {product['price']:,.0f} KZT")
    
    print(f"üí∞ –û–±—â–∞—è —Å—É–º–º–∞: {total_price:,.0f} KZT + –¥–æ—Å—Ç–∞–≤–∫–∞ 2000 KZT")
    print(f"üë§ –ü–æ–ª—É—á–∞—Ç–µ–ª—å: {payload['data']['properties']['nameRecipient']}")
    print("")
    
    try:
        response = requests.post(
            WEBHOOK_URL,
            json=payload,
            headers={'Content-Type': 'application/json'},
            timeout=45
        )
        
        if response.status_code == 200:
            result = response.json()
            print(f"‚úÖ Webhook —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω:")
            print(f"   ‚Ä¢ Status: {result.get('status')}")
            print(f"   ‚Ä¢ Supabase Order ID: {result.get('order_id')}")
            print("")
            
            print("‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ (15 —Å–µ–∫—É–Ω–¥)...")
            time.sleep(15)
            
            print("üéâ –ó–∞–∫–∞–∑ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ —Å–æ–∑–¥–∞–Ω!")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞: {response.status_code} - {response.text}")
            return False
            
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏...")
    print("    –≠—Ç–æ—Ç —Ç–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ ID —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö\\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å FastAPI
    try:
        response = requests.get("http://localhost:8001/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–ø—É—â–µ–Ω–æ")
        else:
            print("‚ö†Ô∏è FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–≤–µ—á–∞–µ—Ç, –Ω–æ –Ω–µ HTTP 200")
    except:
        print("‚ùå FastAPI –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ù–ï –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ localhost:8001")
        return
    
    print("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    for product in REAL_PRODUCTS:
        print(f"   ‚Ä¢ {product['name']} (ID: {product['id']}) - {product['price']:,.0f} KZT")
    print("")
    
    # –¢–µ—Å—Ç 1: –û–¥–∏–Ω —Ç–æ–≤–∞—Ä
    print("üß™ –¢–ï–°–¢ 1: –ó–∞–∫–∞–∑ —Å –æ–¥–Ω–∏–º —Ç–æ–≤–∞—Ä–æ–º")
    success1 = create_test_order_with_real_items()
    
    if success1:
        print("‚úÖ –¢–µ—Å—Ç 1 –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!\\n")
        
        # –¢–µ—Å—Ç 2: –ù–µ—Å–∫–æ–ª—å–∫–æ —Ç–æ–≤–∞—Ä–æ–≤
        print("üß™ –¢–ï–°–¢ 2: –ó–∞–∫–∞–∑ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏")
        success2 = test_multiple_items_order()
        
        if success2:
            print("‚úÖ –¢–µ—Å—Ç 2 –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("")
            print("üéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–ô–î–ï–ù–´!")
            print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã:")
            print("   ‚Ä¢ –°–æ–∑–¥–∞–Ω–æ 2 –∑–∞–∫–∞–∑–∞ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏")
            print("   ‚Ä¢ –¢–æ–≤–∞—Ä—ã –¥–æ–ª–∂–Ω—ã –æ—Ç–æ–±—Ä–∞–∂–∞—Ç—å—Å—è –≤ Bitrix CRM")
            print("   ‚Ä¢ –°—É–º–º—ã –∑–∞–∫–∞–∑–æ–≤ –¥–æ–ª–∂–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Ü–µ–Ω–∞–º —Ç–æ–≤–∞—Ä–æ–≤")
        else:
            print("‚ùå –¢–µ—Å—Ç 2 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")
    else:
        print("‚ùå –¢–µ—Å—Ç 1 –Ω–µ –ø—Ä–æ–π–¥–µ–Ω")

if __name__ == "__main__":
    main()